services:
  gw-demo.api:
    image: gw-demo.api
    build:
      context: .
      dockerfile: Gw-Demo.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    networks:
      - backend
    ports:
      - 8080:8080

  krakend:
    image: devopsfaith/krakend:latest
    volumes:
      - "./Gw-Demo.KrakenD:/etc/krakend"
    ports:
      - "8081:8080"
    networks:
      - backend
    command: [ "run", "-dc", "krakend.json" ]

  ocelot:
    image: ocelot.api
    build:
      context: .
      dockerfile: Gw-Demo.Ocelot/Gw-Demo.Ocelot.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    volumes:
      - "./Gw-Demo.Ocelot/Gw-Demo.Ocelot.Api/ocelot.json:/app/ocelot.json" # Ocelot konfigürasyonu mount edildi
    networks:
      - backend
    ports:
      - "8082:8080" # Ocelot için port ayarlandı
    command: [ "dotnet", "Ocelot.Api.dll" ] # Ocelot'u başlat
    
  traefik:
    image: traefik:v2.5
    command:
      - --api.insecure=true
      - --providers.file.filename=/etc/traefik/traefik.yaml
    ports:
      - "8084:80"      # HTTP
      - "8083:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./Gw-Demo.Traefik/config:/etc/traefik
    networks:
      - backend

networks:
  backend:

volumes:
  postgres_data: